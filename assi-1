The database and table (FootballLeague) has been created and data is inserted.

using Football.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace Football.Controllers
{
public class HomeController : Controller
{
SampleEntities db = new SampleEntities();
// GET: Home
public ActionResult Index()
{
var data = db.FootBallLeagues.ToList();
return View(data);
}

[HttpPost]
public ActionResult Create( FootBallLeague f)
{
if(ModelState.IsValid==true)
{
db.FootBallLeagues.Add(f);
int a=db.SaveChanges();
if(a>0)
{
TempData["InsertMessage"]="<script>alert('Inserted!!')</script>";
return RedirectToAction("Index");
}
else
{
TempData["InsertMessage"]="<script>alert('notInserted!!')</script>";

}
}
return View();
}
}
}

--------------------
Create.cshtml
--------------------
@model Football.Models.FootBallLeague

@{
ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<h1 style="background-color:MediumSeaGreen;">

<div class="form-horizontal">
<h4>FootBallLeague</h4>
<hr />

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">

@Html.LabelFor(model => model.MatchId, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.MatchId, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.MatchId, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.TeamName1, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TeamName1, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TeamName1, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.TeamName2, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TeamName2, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TeamName2, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.MatchStatus, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.MatchStatus, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.MatchStatus, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.WinningTeam, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.WinningTeam, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.WinningTeam, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
<div class="col-md-offset-2 col-md-10">
<input type="submit" value="Create" class="btn btn-default" />
</div>
</div>
</div>
</h1>
}

<div>
@Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WebApplication8.Models;

namespace WebApplication8.Controllers
{
public class HomeController : Controller
{
SampleEntities db = new SampleEntities();
// GET: Home
public ActionResult Index()
{
var data = db.FootBallLeagues.ToList();
return View(data);
}
public ActionResult Create()
{
return View();
}
}
}
Model IEnumerable<WebApplication8.Models.FootBallLeague>

@{
ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
@Html.ActionLink("Create New", "Create")
</p>
<table class="table">
<tr>
<th>
@Html.DisplayNameFor(model => model.TeamName1)
</th>
<th>
@Html.DisplayNameFor(model => model.TeamName2)
</th>
<th>
@Html.DisplayNameFor(model => model.MatchStatus)
</th>
<th>
@Html.DisplayNameFor(model => model.WinningTeam)
</th>
<th>
@Html.DisplayNameFor(model => model.Points)
</th>
<th></th>
</tr>

@foreach (var item in Model) {
<tr>
<td>
@Html.DisplayFor(modelItem => item.TeamName1)
</td>
<td>
@Html.DisplayFor(modelItem => item.TeamName2)
</td>
<td>
@Html.DisplayFor(modelItem => item.MatchStatus)
</td>
<td>
@Html.DisplayFor(modelItem => item.WinningTeam)
</td>
<td>
@Html.DisplayFor(modelItem => item.Points)
</td>
<td>
@Html.ActionLink("Edit", "Edit", new { id=item.MatchId }) |
@Html.ActionLink("Details", "Details", new { id=item.MatchId }) |
@Html.ActionLink("Delete", "Delete", new { id=item.MatchId })
</td>
</tr>
}

</table>
@model WebApplication8.Models.FootBallLeague

@{
ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<h1 style="background-color:MediumSeaGreen;">
<div class="form-horizontal">
<h4>FootBallLeague</h4>
<hr />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
@Html.LabelFor(model => model.MatchId, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.MatchId, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.MatchId, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.TeamName1, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TeamName1, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TeamName1, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.TeamName2, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.TeamName2, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.TeamName2, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.MatchStatus, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.MatchStatus, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.MatchStatus, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.WinningTeam, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.WinningTeam, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.WinningTeam, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
@Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
@Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
</div>
</div>

<div class="form-group">
<div class="col-md-offset-2 col-md-10">
<input type="submit" value="Create" class="btn btn-default" />
</div>
</div>
</div>
</h1>
}
